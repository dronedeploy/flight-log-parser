{"version":3,"file":"flight-log-parser.js","sources":["../src/types.ts","../node_modules/csv-parse/lib/ResizeableBuffer.js","../node_modules/csv-parse/lib/index.js","../src/field-types.ts","../src/parser.ts"],"sourcesContent":["export enum FlightLogHeader {\n  DateTime = 'Date/Time (UTC)',\n  ElapsedTime = 'Elapsed Time (sec)',\n  Info = 'Info',\n  DeviceLatitude = 'Device Latitude (Degrees)',\n  DeviceLongitude = 'Device Longitude (Degrees)',\n  DeviceLocationLastUpdated = 'Device Location Last Updated (ms)',\n  AircraftBatteryPowerPercent = 'Aircraft Battery Power (%)',\n  AircraftBatteryCharge = 'Aircraft Battery Charge (mAh)',\n  AircraftBatteryCurrent = 'Aircraft Battery Current (mA)',\n  AircraftBatteryVoltage = 'Aircraft Battery Voltage (mV)',\n  AircraftBatteryTemperature = 'Aircraft Battery Temperature (Fahrenheit)',\n  AircraftBatteryLastUpdated = 'Aircraft Battery Last Updated (ms)',\n  AircraftBatteryCell1Voltage = 'Aircraft Battery Cell 1 Voltage',\n  AircraftBatteryCell2Voltage = 'Aircraft Battery Cell 2 Voltage',\n  AircraftBatteryCell3Voltage = 'Aircraft Battery Cell 3 Voltage',\n  AircraftBatteryCell4Voltage = 'Aircraft Battery Cell 4 Voltage',\n  AircraftBatteryCellVoltageLastUpdated = 'Aircraft Battery Cell Voltage Last Updated (ms)',\n  AircraftLatitude = 'Aircraft Latitude (Degrees)',\n  AircraftLongitude = 'Aircraft Longitude (Degrees)',\n  AircraftSpeed = 'Aircraft Speed (mph)',\n  AircraftBarometricAltitude = 'Aircraft Barometric Altitude (ft)',\n  AircraftHeading = 'Aircraft Heading (Degrees)',\n  AircraftVelocityX = 'Aircraft Vel - X (mph)',\n  AircraftVelocityY = 'Aircraft Vel - Y (mph)',\n  AircraftVelocityZ = 'Aircraft Vel - Z (mph)',\n  AircraftPitch = 'Aircraft Pitch (Degrees)',\n  AircraftRoll = 'Aircraft Roll (Degrees)',\n  AircraftSatellites = 'Aircraft Satellites',\n  AircraftMotorsOn = 'Aircraft Motors On',\n  AircraftFlying = 'Aircraft Flying',\n  AircraftFlightMode = 'Aircraft Flight Mode',\n  AircraftFlightModeValue = 'Aircraft Flight Mode Value',\n  AircraftIMUPreheating = 'Aircraft IMU Preheating',\n  AircraftUltrasonicOn = 'Aircraft Ultrasonic On',\n  AircraftUltrasonicAltitude = 'Aircraft Ultrasonic Altitude (ft)',\n  AircraftVisionOn = 'Aircraft Vision On',\n  AircraftGPSSignal = 'Aircraft GPS Signal',\n  AircraftGPSSignalValue = 'Aircraft GPS Signal Value',\n  AircraftNoFly = 'Aircraft No-fly',\n  AircraftNoFlyValue = 'Aircraft No-fly Value',\n  AircraftNoFlyLatitude = 'Aircraft No-fly Latitude (Degrees)',\n  AircraftNoFlyLongitude = 'Aircraft No-fly Longitude (Degrees)',\n  AircraftNoFlyRadius = 'Aircraft No-fly Radius (ft)',\n  HomeLatitude = 'Home Latitude (Degrees)',\n  HomeLongitude = 'Home Longitude (Degrees)',\n  AircraftSmartGoHomeFlightTimeRemaining = 'Aircraft Smart Go-home Flight Time Remaining (sec)',\n  AircraftSmartGoHomeFlightReturnTime = 'Aircraft Smart Go-home Flight Return Time (sec)',\n  AircraftSmartGoHomeLandingTime = 'Aircraft Smart Go-home Landing Time (sec)',\n  AircraftSmartGoHomeReturnPower = 'Aircraft Smart Go-home Return Power (%)',\n  AircraftSmartGoHomeLandingPower = 'Aircraft Smart Go-home Landing Power (%)',\n  AircraftSmartGoHomeRadius = 'Aircraft Smart Go-home Radius (ft)',\n  AircraftSmartGoHomeCountdown = 'Aircraft Smart Go-home Countdown (sec)',\n  AircraftSmartGoHomeRequesting = 'Aircraft Smart Go-home Requesting',\n  AircraftSystemStateLastUpdated = 'Aircraft System State Last Updated (ms)',\n  GimbalPitch = 'Gimbal Pitch (Degrees)',\n  GimbalRoll = 'Gimbal Roll (Degrees)',\n  GimbalYaw = 'Gimbal Yaw (Degrees)',\n  GimbalMode = 'Gimbal Mode',\n  GimbalModeValue = 'Gimbal Mode Value',\n  GimbalPitchAtStop = 'Gimbal Pitch at Stop',\n  GimbalRollAtStop = 'Gimbal Roll at Stop',\n  GimbalYawAtStop = 'Gimbal Yaw at Stop',\n  GimbalStatusLastUpdated = 'Gimbal Status Last Updated (ms)',\n  LandingGearIsMovable = 'Landing Gear is Movable',\n  LandingGearStatus = 'Landing Gear Status',\n  LandingGearStatusValue = 'Landing Gear Status Value',\n  LandingGearMode = 'Landing Gear Mode',\n  LandingGearModeValue = 'Landing Gear Mode Value',\n  LandingGearLastUpdated = 'Landing Gear Last Updated (ms)',\n  RCState = 'RC State',\n  RCStateValue = 'RC State Value',\n  RCLeftHorizontal = 'RC Left Horizontal',\n  RCLeftVertical = 'RC Left Vertical',\n  RCRightHorizontal = 'RC Right Horizontal',\n  RCRightVertical = 'RC Right Vertical',\n  RCLeftWheel = 'RC Left Wheel',\n  RCRightWheel = 'RC Right Wheel',\n  RCLandingGear = 'RC Landing Gear',\n  RCLandingGearValue = 'RC Landing Gear Value',\n  RCGoHome = 'RC Go Home',\n  RCRecord = 'RC Record ',\n  RCShutter = 'RC Shutter',\n  RCPlayback = 'RC Playback',\n  RCPause = 'RC Pause',\n  RCCustom1 = 'RC Custom 1',\n  RCCustom2 = 'RC Custom 2',\n  RCStateLastUpdated = 'RC State Last Updated (ms)',\n  RCBatteryPercentRemaining = 'RC Battery (%)',\n  RCBatteryStateLastUpdated = 'RC Battery State Last Updated (ms)',\n  RCSattelites = 'RC Sattelites',\n  RCHorizontalAccuaracy = 'RC Horizontal Accuaracy (ft)',\n  RCLatitude = 'RC Latitude (Degrees)',\n  RCLongitude = 'RC Longitude (Degrees)',\n  RCGSPDataIsValid = 'RC GSP Data is Valid',\n  RCGPSStateLastUpdated = 'RC GPS State Last Updated (ms)',\n  RCSignal1 = 'RC Signal 1',\n  RCSignal2 = 'RC Signal 2',\n  RCSignalLastUpdated = 'RC Signal Last Updated (ms)',\n  LBSignal1 = 'LB Signal 1',\n  LBSignal2 = 'LB Signal 2',\n  LBSignalLastUpdated = 'LB Signal Last Updated (ms)',\n  AircraftCameraMode = 'Aircraft Camera Mode',\n  AircraftCameraModeValue = 'Aircraft Camera Mode Value',\n  AircraftCameraOverheated = 'Aircraft Camera Overheated',\n  AircraftCameraSensorError = 'Aircraft Camera Sensor Error',\n  AircraftCameraRecording = 'Aircraft Camera Recording',\n  AircraftCameraRawCapture = 'Aircraft Camera Raw Capture',\n  AircraftCameraIntervalCapture = 'Aircraft Camera Interval Capture',\n  AircraftCameraBurstCapture = 'Aircraft Camera Burst Capture',\n  AircraftCameraSingleCapture = 'Aircraft Camera Single Capture',\n  AircraftCameraStoringPhoto = 'Aircraft Camera Storing Photo',\n  AircraftCameraStateLastUpdated = 'Aircraft Camera State Last Updated (ms)',\n  AircraftCameraSDCardExists = 'Aircraft Camera SD Card Exists',\n  AircraftCameraSDCardRemainingPercent = 'Aircraft Camera SD Card Remaining (%)',\n  AircraftCameraSDCardStateLastUpdated = 'Aircraft Camera SD Card State Last Updated (ms)',\n  AircraftCameraChangeableLensSupported = 'Aircraft Camera Changeable Lens Supported',\n  AircraftCameraLensInstalled = 'Aircraft Camera Lens Installed',\n  AircraftCameraLensType = 'Aircraft Camera Lens Type',\n  AircraftCameraLensAFEnabled = 'Aircraft Camera Lens AF Enabled',\n  AircraftCameraLensFocusMode = 'Aircraft Camera Lens Focus Mode',\n  AircraftCameraLensFocusModeValue = 'Aircraft Camera Lens Focus Mode Value',\n  AircraftCameraLensFocusStatus = 'Aircraft Camera Lens Focus Status',\n  AircraftCameraLensFocusStatusValue = 'Aircraft Camera Lens Focus Status Value',\n  AircraftCameraLensMFAssistant = 'Aircraft Camera Lens MF Assistant',\n  AircraftCameraLensAFAssistant = 'Aircraft Camera Lens AF Assistant',\n  AircraftCameraLensAssistantWorking = 'Aircraft Camera Lens Assistant Working',\n  AircraftCameraLensStateLastUpdated = 'Aircraft Camera Lens State Last Updated (ms)',\n  CompassIndex = \"Compass Index\",\n  CompassSensorValue = \"Compass Sensor Value\",\n  CompassState = \"Compass State\",\n  CompassStateLastUpdated = \"Compass State Last Updated (ms)\",\n  CompassCalibrationState = \"Compass Calibration State\",\n  CompassCalibrationLastUpdated = \"Compass Calibration Last Updated (ms)\",\n  DeviceToAircraftDistance = 'Device > Aircraft Distance - XY (ft)',\n}\n\nexport type FlightLogRow = {\n  [prop in FlightLogHeader]: any // because csv\n};\n\nexport type FlightLogMetaData = {\n  appVersion: string;\n  session: {\n    id: string;\n    start: Date;\n    end: Date | null;\n    elapsed: number;\n  };\n  device: {\n    model: string;\n    os: string;\n    platform: string;\n  };\n  aircraft: {\n    model: string;\n    name: string;\n    firmware: string;\n  };\n  battery: {\n    chargeVolume: number;\n    remainingLifePercent: number;\n    discharges: number;\n    cells: number;\n    firmware: string;\n    serialNumber: string;\n  };\n  flightController: {\n    serialNumber: string;\n    firmware: string;\n  };\n  gimbal: {\n    firmware: string;\n  };\n  remoteController: {\n    serialNumber: string;\n    firmware: string;\n  };\n  camera: {\n    serialNumber: string;\n  };\n  user: {\n    userId: string;\n    organizationId: string;\n  };\n};\n\nexport type FlightLog = {\n  metaData: FlightLogMetaData;\n  rows: FlightLogRow[];\n  infos: any[];\n};\n\nexport type FlightLogEvent = {\n  meta: FlightLogMetaData;\n  rowIndex?: number;\n  row?: FlightLogRow;\n  info?: undefined|Array<object>;  // Empty string => undefined, else parsed JSON blob.\n};\n\n// based off of types in ios/android SDK FlightMode enums\nexport const FLIGHT_MODE_MAPPING_V4 = {\n  0: 'Manual',\n  1: 'Attitude',\n  2: 'Attitude Course Lock',\n  3: 'Attitude Hover',\n  4: 'Hover',\n  5: 'GPS Brake',\n  6: 'GPS Attitude',\n  7: 'GPS Course Lock',\n  8: 'GPS Home',\n  9: 'GPS Hotpoint',\n  10: 'Assisted Takeoff',\n  11: 'Auto Takeoff',\n  12: 'Auto Landing',\n  13: 'Attitude Landing',\n  14: 'GPS Waypoint',\n  15: 'Go Home',\n  16: 'Click Go',\n  17: 'Joystick',\n  18: 'Attitude Limited',\n  19: 'Cinematic',\n  23: 'Attitude Limited',\n  24: 'Draw',\n  25: 'GPS Follow Me',\n  26: 'ActiveTrack',\n  27: 'TapFly',\n  28: 'Pano',\n  29: 'Farming',\n  30: 'FPV',\n  31: 'GPS Sport',\n  32: 'GPS Novice',\n  33: 'Confirm Landing',\n  35: 'Terrain Follow',\n  36: 'Palm Control',\n  37: 'Quick Shot',\n  38: 'Tripod',\n  39: 'ActiveTrack Spotlight',\n  41: 'Motors Just Started',\n  43: 'GPS Gentle',\n  255: 'Unknown',\n};\n\nexport const FLIGHT_MODE_MAPPING_V5 = {\n  0: 'Manual',\n  1: 'Attitude',\n  2: 'GPS Normal',\n  3: 'POI',\n  4: 'Takeoff Ready',\n  5: 'Auto Takeoff',\n  6: 'Auto Landing',\n  7: 'Waypoint',\n  8: 'Go Home',\n  9: 'Virtual Stick',\n  10: 'Smart Flight',\n  11: 'Pano',\n  12: 'GPS Sport',\n  13: 'GPS Tripod',\n  14: 'Auto Avoidance',\n  15: 'Smart Fly',\n  16: 'Force Landing',\n  17: 'Attitude Landing',\n  18: 'Click Go',\n  19: 'Cinematic',\n  20: 'Draw',\n  21: 'GPS Follow Me',\n  22: 'GPS Novice',\n  23: 'Quick Movie',\n  24: 'Tap Fly',\n  25: 'Master Shot',\n  26: 'APAS',\n  27: 'Timelapse',\n  28: 'Motors Start',\n  29: 'Unknown',\n};\n","\n\nclass ResizeableBuffer{\n  constructor(size=100){\n    this.size = size\n    this.length = 0\n    this.buf = Buffer.alloc(size)\n  }\n  prepend(val){\n    const length = this.length++\n    if(length === this.size){\n      this.resize()\n    }\n    const buf = this.clone()\n    this.buf[0] = val\n    buf.copy(this.buf,1, 0, length)\n  }\n  append(val){\n    const length = this.length++\n    if(length === this.size){\n      this.resize()\n    }\n    this.buf[length] = val\n  }\n  clone(){\n    return Buffer.from(this.buf.slice(0, this.length))\n  }\n  resize(){\n    const length = this.length\n    this.size = this.size * 2\n    const buf = Buffer.alloc(this.size)\n    this.buf.copy(buf,0, 0, length)\n    this.buf = buf\n  }\n  toString(){\n    return this.buf.slice(0, this.length).toString()\n  }\n  reset(){\n    this.length = 0\n  }\n}\n\nmodule.exports = ResizeableBuffer\n","\n/*\nCSV Parse\n\nPlease look at the [project documentation](https://csv.js.org/parse/) for additional\ninformation.\n*/\n\nconst { Transform } = require('stream')\nconst ResizeableBuffer = require('./ResizeableBuffer')\n\nconst cr = 13\nconst nl = 10\nconst space = 32\nconst tab = 9\nconst bom_utf8 = Buffer.from([239, 187, 191])\n\nclass Parser extends Transform {\n  constructor(opts = {}){\n    super({...{readableObjectMode: true}, ...opts})\n    const options = {}\n    // Merge with user options\n    for(let opt in opts){\n      options[underscore(opt)] = opts[opt]\n    }\n    // Normalize option `bom`\n    if(options.bom === undefined || options.bom === null || options.bom === false){\n      options.bom = false\n    }else if(options.bom !== true){\n      throw new Error(`Invalid Option: bom must be true, got ${JSON.stringify(options.bom)}`)\n    }\n    // Normalize option `cast`\n    let fnCastField = null\n    if(options.cast === undefined || options.cast === null || options.cast === false || options.cast === ''){\n      options.cast = undefined\n    }else if(typeof options.cast === 'function'){\n      fnCastField = options.cast\n      options.cast = true\n    }else if(options.cast !== true){\n      throw new Error('Invalid Option: cast must be true or a function')\n    }\n    // Normalize option `cast_date`\n    if(options.cast_date === undefined || options.cast_date === null || options.cast_date === false || options.cast_date === ''){\n      options.cast_date = false\n    }else if(options.cast_date === true){\n      options.cast_date = function(value){\n        const date = Date.parse(value)\n        return !isNaN(date) ? new Date(date) : value\n      }\n    }else if(typeof options.cast_date !== 'function'){\n      throw new Error('Invalid Option: cast_date must be true or a function')\n    }\n    // Normalize option `columns`\n    let fnFirstLineToHeaders = null\n    if(options.columns === true){\n      // Fields in the first line are converted as-is to columns\n      fnFirstLineToHeaders = undefined\n    }else if(typeof options.columns === 'function'){\n      fnFirstLineToHeaders = options.columns\n      options.columns = true\n    }else if(Array.isArray(options.columns)){\n      options.columns = normalizeColumnsArray(options.columns)\n    }else if(options.columns === undefined || options.columns === null || options.columns === false){\n      options.columns = false\n    }else{\n      throw new Error(`Invalid Option columns: expect an object or true, got ${JSON.stringify(options.columns)}`)\n    }\n    // Normalize option `comment`\n    if(options.comment === undefined || options.comment === null || options.comment === false || options.comment === ''){\n      options.comment = null\n    }else{\n      if(typeof options.comment === 'string'){\n        options.comment = Buffer.from(options.comment)\n      }\n      if(!Buffer.isBuffer(options.comment)){\n        throw new Error(`Invalid Option: comment must be a buffer or a string, got ${JSON.stringify(options.comment)}`)\n      }\n    }\n    // Normalize option `delimiter`\n    if(options.delimiter === undefined || options.delimiter === null || options.delimiter === false){\n      options.delimiter = Buffer.from(',')\n    }else if(Buffer.isBuffer(options.delimiter)){\n      if(options.delimiter.length === 0){\n        throw new Error(`Invalid Option: delimiter must be a non empty buffer`)\n      }\n      // Great, nothing to do\n    }else if(typeof options.delimiter === 'string'){\n      if(options.delimiter.length === 0){\n        throw new Error(`Invalid Option: delimiter must be a non empty string`)\n      }\n      options.delimiter = Buffer.from(options.delimiter)\n    }else{\n      throw new Error(`Invalid Option: delimiter must be a string or a buffer, got ${options.delimiter}`)\n    }\n    // Normalize option `escape`\n    if(options.escape === undefined || options.escape === null){\n      options.escape = Buffer.from('\"')\n    }else if(typeof options.escape === 'string'){\n      options.escape = Buffer.from(options.escape)\n    }\n    if(!Buffer.isBuffer(options.escape)){\n      throw new Error(`Invalid Option: escape must be a buffer or a string, got ${JSON.stringify(options.escape)}`)\n    }else if(options.escape.length !== 1){\n      throw new Error(`Invalid Option Length: escape must be one character, got ${options.escape.length}`)\n    }else{\n      options.escape = options.escape[0]\n    }\n    // Normalize option `from`\n    if(options.from === undefined || options.from === null){\n      options.from = 1\n    }else{\n      if(typeof options.from === 'string' && /\\d+/.test(options.from)){\n        options.from = parseInt(options.from)\n      }\n      if(Number.isInteger(options.from)){\n        if(options.from < 0){\n          throw new Error(`Invalid Option: from must be a positive integer, got ${JSON.stringify(opts.from)}`)\n        }\n      }else{\n        throw new Error(`Invalid Option: from must be an integer, got ${JSON.stringify(options.from)}`)\n      }\n    }\n    // Normalize option `from_line`\n    if(options.from_line === undefined || options.from_line === null){\n      options.from_line = 1\n    }else{\n      if(typeof options.from_line === 'string' && /\\d+/.test(options.from_line)){\n        options.from_line = parseInt(options.from_line)\n      }\n      if(Number.isInteger(options.from_line)){\n        if(options.from_line <= 0){\n          throw new Error(`Invalid Option: from_line must be a positive integer greater than 0, got ${JSON.stringify(opts.from_line)}`)\n        }\n      }else{\n        throw new Error(`Invalid Option: from_line must be an integer, got ${JSON.stringify(opts.from_line)}`)\n      }\n    }\n    // Normalize option `info`\n    if(options.info === undefined || options.info === null || options.info === false){\n      options.info = false\n    }else if(options.info !== true){\n      throw new Error(`Invalid Option: info must be true, got ${JSON.stringify(options.info)}`)\n    }\n    // Normalize option `max_record_size`\n    if(options.max_record_size === undefined || options.max_record_size === null || options.max_record_size === false){\n      options.max_record_size = 0\n    }else if(Number.isInteger(options.max_record_size) && options.max_record_size >= 0){\n      // Great, nothing to do\n    }else if(typeof options.max_record_size === 'string' && /\\d+/.test(options.max_record_size)){\n      options.max_record_size = parseInt(options.max_record_size)\n    }else{\n      throw new Error(`Invalid Option: max_record_size must be a positive integer, got ${JSON.stringify(options.max_record_size)}`)\n    }\n    // Normalize option `objname`\n    if(options.objname === undefined || options.objname === null || options.objname === false){\n      options.objname = undefined\n    }else if(Buffer.isBuffer(options.objname)){\n      if(options.objname.length === 0){\n        throw new Error(`Invalid Option: objname must be a non empty buffer`)\n      }\n      options.objname = options.objname.toString()\n    }else if(typeof options.objname === 'string'){\n      if(options.objname.length === 0){\n        throw new Error(`Invalid Option: objname must be a non empty string`)\n      }\n      // Great, nothing to do\n    }else{\n      throw new Error(`Invalid Option: objname must be a string or a buffer, got ${options.objname}`)\n    }\n    // Normalize option `quote`\n    if(options.quote === null || options.quote === false || options.quote === ''){\n      options.quote = null\n    }else{\n      if(options.quote === undefined || options.quote === true){\n        options.quote = Buffer.from('\"')\n      }else if(typeof options.quote === 'string'){\n        options.quote = Buffer.from(options.quote)\n      }\n      if(!Buffer.isBuffer(options.quote)){\n        throw new Error(`Invalid Option: quote must be a buffer or a string, got ${JSON.stringify(options.quote)}`)\n      }else if(options.quote.length !== 1){\n        throw new Error(`Invalid Option Length: quote must be one character, got ${options.quote.length}`)\n      }else{\n        options.quote = options.quote[0]\n      }\n    }\n    // Normalize option `raw`\n    if(options.raw === undefined || options.raw === null || options.raw === false){\n      options.raw = false\n    }else if(options.raw !== true){\n      throw new Error(`Invalid Option: raw must be true, got ${JSON.stringify(options.raw)}`)\n    }\n    // Normalize option `record_delimiter`\n    if(!options.record_delimiter){\n      options.record_delimiter = []\n    }else if(!Array.isArray(options.record_delimiter)){\n      options.record_delimiter = [options.record_delimiter]\n    }\n    options.record_delimiter = options.record_delimiter.map( function(rd){\n      if(typeof rd === 'string'){\n        rd = Buffer.from(rd)\n      }\n      return rd\n    })\n    // Normalize option `relax`\n    if(typeof options.relax === 'boolean'){\n      // Great, nothing to do\n    }else if(options.relax === undefined || options.relax === null){\n      options.relax = false\n    }else{\n      throw new Error(`Invalid Option: relax must be a boolean, got ${JSON.stringify(options.relax)}`)\n    }\n    // Normalize option `relax_column_count`\n    if(typeof options.relax_column_count === 'boolean'){\n      // Great, nothing to do\n    }else if(options.relax_column_count === undefined || options.relax_column_count === null){\n      options.relax_column_count = false\n    }else{\n      throw new Error(`Invalid Option: relax_column_count must be a boolean, got ${JSON.stringify(options.relax_column_count)}`)\n    }\n    // Normalize option `skip_empty_lines`\n    if(typeof options.skip_empty_lines === 'boolean'){\n      // Great, nothing to do\n    }else if(options.skip_empty_lines === undefined || options.skip_empty_lines === null){\n      options.skip_empty_lines = false\n    }else{\n      throw new Error(`Invalid Option: skip_empty_lines must be a boolean, got ${JSON.stringify(options.skip_empty_lines)}`)\n    }\n    // Normalize option `skip_lines_with_empty_values`\n    if(typeof options.skip_lines_with_empty_values === 'boolean'){\n      // Great, nothing to do\n    }else if(options.skip_lines_with_empty_values === undefined || options.skip_lines_with_empty_values === null){\n      options.skip_lines_with_empty_values = false\n    }else{\n      throw new Error(`Invalid Option: skip_lines_with_empty_values must be a boolean, got ${JSON.stringify(options.skip_lines_with_empty_values)}`)\n    }\n    // Normalize option `skip_lines_with_error`\n    if(typeof options.skip_lines_with_error === 'boolean'){\n      // Great, nothing to do\n    }else if(options.skip_lines_with_error === undefined || options.skip_lines_with_error === null){\n      options.skip_lines_with_error = false\n    }else{\n      throw new Error(`Invalid Option: skip_lines_with_error must be a boolean, got ${JSON.stringify(options.skip_lines_with_error)}`)\n    }\n    // Normalize option `rtrim`\n    if(options.rtrim === undefined || options.rtrim === null || options.rtrim === false){\n      options.rtrim = false\n    }else if(options.rtrim !== true){\n      throw new Error(`Invalid Option: rtrim must be a boolean, got ${JSON.stringify(options.rtrim)}`)\n    }\n    // Normalize option `ltrim`\n    if(options.ltrim === undefined || options.ltrim === null || options.ltrim === false){\n      options.ltrim = false\n    }else if(options.ltrim !== true){\n      throw new Error(`Invalid Option: ltrim must be a boolean, got ${JSON.stringify(options.ltrim)}`)\n    }\n    // Normalize option `trim`\n    if(options.trim === undefined || options.trim === null || options.trim === false){\n      options.trim = false\n    }else if(options.trim !== true){\n      throw new Error(`Invalid Option: trim must be a boolean, got ${JSON.stringify(options.trim)}`)\n    }\n    // Normalize options `trim`, `ltrim` and `rtrim`\n    if(options.trim === true && opts.ltrim !== false){\n      options.ltrim = true\n    }else if(options.ltrim !== true){\n      options.ltrim = false\n    }\n    if(options.trim === true && opts.rtrim !== false){\n      options.rtrim = true\n    }else if(options.rtrim !== true){\n      options.rtrim = false\n    }\n    // Normalize option `to`\n    if(options.to === undefined || options.to === null){\n      options.to = -1\n    }else{\n      if(typeof options.to === 'string' && /\\d+/.test(options.to)){\n        options.to = parseInt(options.to)\n      }\n      if(Number.isInteger(options.to)){\n        if(options.to <= 0){\n          throw new Error(`Invalid Option: to must be a positive integer greater than 0, got ${JSON.stringify(opts.to)}`)\n        }\n      }else{\n        throw new Error(`Invalid Option: to must be an integer, got ${JSON.stringify(opts.to)}`)\n      }\n    }\n    // Normalize option `to_line`\n    if(options.to_line === undefined || options.to_line === null){\n      options.to_line = -1\n    }else{\n      if(typeof options.to_line === 'string' && /\\d+/.test(options.to_line)){\n        options.to_line = parseInt(options.to_line)\n      }\n      if(Number.isInteger(options.to_line)){\n        if(options.to_line <= 0){\n          throw new Error(`Invalid Option: to_line must be a positive integer greater than 0, got ${JSON.stringify(opts.to_line)}`)\n        }\n      }else{\n        throw new Error(`Invalid Option: to_line must be an integer, got ${JSON.stringify(opts.to_line)}`)\n      }\n    }\n    this.info = {\n      comment_lines: 0,\n      empty_lines: 0,\n      invalid_field_length: 0,\n      lines: 1,\n      records: 0\n    }\n    this.options = options\n    this.state = {\n      bomSkipped: false,\n      castField: fnCastField,\n      commenting: false,\n      enabled: options.from_line === 1,\n      escaping: false,\n      escapeIsQuote: options.escape === options.quote,\n      expectedRecordLength: options.columns === null ? 0 : options.columns.length,\n      field: new ResizeableBuffer(20),\n      firstLineToHeaders: fnFirstLineToHeaders,\n      info: Object.assign({}, this.info),\n      previousBuf: undefined,\n      quoting: false,\n      stop: false,\n      rawBuffer: new ResizeableBuffer(100),\n      record: [],\n      recordHasError: false,\n      record_length: 0,\n      recordDelimiterMaxLength: options.record_delimiter.length === 0 ? 2 : Math.max(...options.record_delimiter.map( (v) => v.length)),\n      trimChars: [Buffer.from(' ')[0], Buffer.from('\\t')[0]],\n      wasQuoting: false,\n      wasRowDelimiter: false\n    }\n  }\n  // Implementation of `Transform._transform`\n  _transform(buf, encoding, callback){\n    if(this.state.stop === true){\n      return\n    }\n    const err = this.__parse(buf, false)\n    if(err !== undefined){\n      this.state.stop = true\n    }\n    callback(err)\n  }\n  // Implementation of `Transform._flush`\n  _flush(callback){\n    if(this.state.stop === true){\n      return\n    }\n    const err = this.__parse(undefined, true)\n    callback(err)\n  }\n  // Central parser implementation\n  __parse(nextBuf, end){\n    const {bom, comment, escape, from, from_line, info, ltrim, max_record_size, quote, raw, relax, rtrim, skip_empty_lines, to, to_line} = this.options\n    let {record_delimiter} = this.options\n    const {bomSkipped, previousBuf, rawBuffer, escapeIsQuote, trimChars} = this.state\n    let buf\n    if(previousBuf === undefined){\n      if(nextBuf === undefined){\n        // Handle empty string\n        this.push(null)\n        return\n      }else{\n        buf = nextBuf\n      }\n    }else if(previousBuf !== undefined && nextBuf === undefined){\n      buf = previousBuf\n    }else{\n      buf = Buffer.concat([previousBuf, nextBuf])\n    }\n    // Handle UTF BOM\n    if(bomSkipped === false){\n      if(bom === false){\n        this.state.bomSkipped = true\n      }else if(buf.length < 3){\n        // No enough data\n        if(end === false){\n          // Wait for more data\n          this.state.previousBuf = buf\n          return\n        }\n        // skip BOM detect because data length < 3\n      }else{\n        if(bom_utf8.compare(buf, 0, 3) === 0){\n          // Skip BOM\n          buf = buf.slice(3)\n        }\n        this.state.bomSkipped = true\n      }\n    }\n    const bufLen = buf.length\n    let pos\n    for(pos = 0; pos < bufLen; pos++){\n      // Ensure we get enough space to look ahead\n      // There should be a way to move this out of the loop\n      if(this.__needMoreData(pos, bufLen, end)){\n        break\n      }\n      if(this.state.wasRowDelimiter === true){\n        this.info.lines++\n        if(info === true && this.state.record.length === 0 && this.state.field.length === 0 && this.state.wasQuoting === false){\n          this.state.info = Object.assign({}, this.info)\n        }\n        this.state.wasRowDelimiter = false\n      }\n      if(to_line !== -1 && this.info.lines > to_line){\n        this.state.stop = true\n        this.push(null)\n        return\n      }\n      // Auto discovery of record_delimiter, unix, mac and windows supported\n      if(this.state.quoting === false && record_delimiter.length === 0){\n        const record_delimiterCount = this.__autoDiscoverRowDelimiter(buf, pos)\n        if(record_delimiterCount){\n          record_delimiter = this.options.record_delimiter\n        }\n      }\n      const chr = buf[pos]\n      if(raw === true){\n        rawBuffer.append(chr)\n      }\n      if((chr === cr || chr === nl) && this.state.wasRowDelimiter === false ){\n        this.state.wasRowDelimiter = true\n      }\n      // Previous char was a valid escape char\n      // treat the current char as a regular char\n      if(this.state.escaping === true){\n        this.state.escaping = false\n      }else{\n        // Escape is only active inside quoted fields\n        if(this.state.quoting === true && chr === escape && pos + 1 < bufLen){\n          // We are quoting, the char is an escape chr and there is a chr to escape\n          if(escapeIsQuote){\n            if(buf[pos+1] === quote){\n              this.state.escaping = true\n              continue\n            }\n          }else{\n            this.state.escaping = true\n            continue\n          }\n        }\n        // Not currently escaping and chr is a quote\n        // TODO: need to compare bytes instead of single char\n        if(this.state.commenting === false && chr === quote){\n          if(this.state.quoting === true){\n            const nextChr = buf[pos+1]\n            const isNextChrTrimable = rtrim && this.__isCharTrimable(nextChr)\n            // const isNextChrComment = nextChr === comment\n            const isNextChrComment = comment !== null && this.__compareBytes(comment, buf, pos+1, nextChr)\n            const isNextChrDelimiter = this.__isDelimiter(nextChr, buf, pos+1)\n            const isNextChrRowDelimiter = record_delimiter.length === 0 ? this.__autoDiscoverRowDelimiter(buf, pos+1) : this.__isRecordDelimiter(nextChr, buf, pos+1)\n            // Escape a quote\n            // Treat next char as a regular character\n            // TODO: need to compare bytes instead of single char\n            if(chr === escape && nextChr === quote){\n              pos++\n            }else if(!nextChr || isNextChrDelimiter || isNextChrRowDelimiter || isNextChrComment || isNextChrTrimable){\n              this.state.quoting = false\n              this.state.wasQuoting = true\n              continue\n            }else if(relax === false){\n              const err = this.__error(`Invalid Closing Quote: got \"${String.fromCharCode(nextChr)}\" at line ${this.info.lines} instead of delimiter, row delimiter, trimable character (if activated) or comment`)\n              if(err !== undefined) return err\n            }else{\n              this.state.quoting = false\n              this.state.wasQuoting = true\n              // continue\n              this.state.field.prepend(quote)\n            }\n          }else{\n            if(this.state.field.length !== 0){\n              // In relax mode, treat opening quote preceded by chrs as regular\n              if( relax === false ){\n                const err = this.__error(`Invalid opening quote at line ${this.info.lines}`)\n                if(err !== undefined) return err\n              }\n            }else{\n              this.state.quoting = true\n              continue\n            }\n          }\n        }\n        if(this.state.quoting === false){\n          let recordDelimiterLength = this.__isRecordDelimiter(chr, buf, pos)\n          if(recordDelimiterLength !== 0){\n            // Do not emit comments which take a full line\n            const skipCommentLine = this.state.commenting && (this.state.wasQuoting === false && this.state.record.length === 0 && this.state.field.length === 0)\n            if(skipCommentLine){\n              this.info.comment_lines++\n              // Skip full comment line\n            }else{\n              // Skip if line is empty and skip_empty_lines activated\n              if(skip_empty_lines === true && this.state.wasQuoting === false && this.state.record.length === 0 && this.state.field.length === 0){\n                this.info.empty_lines++\n                pos += recordDelimiterLength - 1\n                continue\n              }\n              // Activate records emition if above from_line\n              if(this.state.enabled === false && this.info.lines + (this.state.wasRowDelimiter === true ? 1: 0 ) >= from_line){\n                this.state.enabled = true\n                this.__resetField()\n                this.__resetRow()\n                pos += recordDelimiterLength - 1\n                continue\n              }else{\n                const errField = this.__onField()\n                if(errField !== undefined) return errField\n                const errRecord = this.__onRow()\n                if(errRecord !== undefined) return errRecord\n              }\n              if(to !== -1 && this.info.records >= to){\n                this.state.stop = true\n                this.push(null)\n                return\n              }\n            }\n            this.state.commenting = false\n            pos += recordDelimiterLength - 1\n            continue\n          }\n          if(this.state.commenting){\n            continue\n          }\n          const commentCount = comment === null ? 0 : this.__compareBytes(comment, buf, pos, chr)\n          if(commentCount !== 0){\n            this.state.commenting = true\n            continue\n          }\n          let delimiterLength = this.__isDelimiter(chr, buf, pos)\n          if(delimiterLength !== 0){\n            const errField = this.__onField()\n            if(errField !== undefined) return errField\n            pos += delimiterLength - 1\n            continue\n          }\n        }\n      }\n      if(this.state.commenting === false){\n        if(max_record_size !== 0 && this.state.record_length + this.state.field.length > max_record_size){\n          const err = this.__error(`Max Record Size: record exceed the maximum number of tolerated bytes of ${max_record_size} on line ${this.info.lines}`)\n          if(err !== undefined) return err\n        }\n      }\n\n      const lappend = ltrim === false || this.state.quoting === true || this.state.field.length !== 0 || !this.__isCharTrimable(chr)\n      // rtrim in non quoting is handle in __onField\n      const rappend = rtrim === false || this.state.wasQuoting === false\n      if( lappend === true && rappend === true ){\n        this.state.field.append(chr)\n      }else if(rtrim === true && !this.__isCharTrimable(chr)){\n        const err = this.__error(`Invalid Closing Quote: found non trimable byte after quote at line ${this.info.lines}`)\n        if(err !== undefined) return err\n      }\n    }\n    if(end === true){\n      if(this.state.quoting === true){\n        const err = this.__error(`Invalid Closing Quote: quote is not closed at line ${this.info.lines}`)\n        if(err !== undefined) return err\n      }else{\n        // Skip last line if it has no characters\n        if(this.state.wasQuoting === true || this.state.record.length !== 0 || this.state.field.length !== 0){\n          const errField = this.__onField()\n          if(errField !== undefined) return errField\n          const errRecord = this.__onRow()\n          if(errRecord !== undefined) return errRecord\n        }else if(this.state.wasRowDelimiter === true){\n          this.info.empty_lines++\n        }else if(this.state.commenting === true){\n          this.info.comment_lines++\n        }\n      }\n    }else{\n      this.state.previousBuf = buf.slice(pos)\n    }\n    if(this.state.wasRowDelimiter === true){\n      this.info.lines++\n      this.state.wasRowDelimiter = false\n    }\n  }\n  // Helper to test if a character is a space or a line delimiter\n  __isCharTrimable(chr){\n    return chr === space || chr === tab || chr === cr || chr === nl\n  }\n  __onRow(){\n    const {columns, info, from, relax_column_count, raw, skip_lines_with_empty_values} = this.options\n    const {enabled, record} = this.state\n    // Convert the first line into column names\n    if(columns === true){\n      return this.__firstLineToColumns(record)\n    }\n    const recordLength = record.length\n    if(columns === false && this.info.records === 0){\n      this.state.expectedRecordLength = recordLength\n    }else if(enabled === true){\n      if(recordLength !== this.state.expectedRecordLength){\n        if(relax_column_count === true){\n          this.info.invalid_field_length++\n        }else{\n          if(columns === false){\n            const err = this.__error(`Invalid Record Length: expect ${this.state.expectedRecordLength}, got ${recordLength} on line ${this.info.lines}`)\n            if(err !== undefined) return err\n          }else{\n            const err = this.__error(`Invalid Record Length: header length is ${columns.length}, got ${recordLength} on line ${this.info.lines}`)\n            if(err !== undefined) return err\n          }\n        }\n      }\n    }\n    if(enabled === false){\n      return this.__resetRow()\n    }\n    if(skip_lines_with_empty_values === true){\n      if(record.map( (field) => field.trim() ).join('') === ''){\n        this.__resetRow()\n        return\n      }\n    }\n    if(this.state.recordHasError === true){\n      this.__resetRow()\n      this.state.recordHasError = false\n      return\n    }\n    this.info.records++\n    if(from === 1 || this.info.records >= from){\n      if(columns !== false){\n        const obj = {}\n        // Transform record array to an object\n        for(let i in record){\n          if(columns[i] === undefined || columns[i].disabled) continue\n          obj[columns[i].name] = record[i]\n        }\n        const {objname} = this.options\n        if(objname === undefined){\n          if(raw === true || info === true){\n            this.push(Object.assign(\n              {record: obj},\n              (raw === true ? {raw: this.state.rawBuffer.toString()}: {}),\n              (info === true ? {info: this.state.info}: {})\n            ))\n          }else{\n            this.push(obj)\n          }\n        }else{\n          if(raw === true || info === true){\n            this.push(Object.assign(\n              {record: [obj[objname], obj]},\n              raw === true ? {raw: this.state.rawBuffer.toString()}: {},\n              info === true ? {info: this.state.info}: {}\n            ))\n          }else{\n            this.push([obj[objname], obj])\n          }\n        }\n      }else{\n        if(raw === true || info === true){\n          this.push(Object.assign(\n            {record: record},\n            raw === true ? {raw: this.state.rawBuffer.toString()}: {},\n            info === true ? {info: this.state.info}: {}\n          ))\n        }else{\n          this.push(record)\n        }\n      }\n    }\n    this.__resetRow()\n  }\n  __firstLineToColumns(record){\n    const {firstLineToHeaders} = this.state\n    try{\n      // record = record.filter(function(field){ return field !== undefined})\n      const headers = firstLineToHeaders === undefined ? record : firstLineToHeaders.call(null, record)\n      if(!Array.isArray(headers)){\n        return this.__error(`Invalid Header Mapping: expect an array, got ${JSON.stringify(headers)}`)\n      }\n      const normalizedHeaders = normalizeColumnsArray(headers)\n      this.state.expectedRecordLength = normalizedHeaders.length\n      this.options.columns = normalizedHeaders\n      this.__resetRow()\n      return\n    }catch(err){\n      return err\n    }\n  }\n  __resetRow(){\n    const {info} = this.options\n    if(this.options.raw === true){\n      this.state.rawBuffer.reset()\n    }\n    this.state.record = []\n    this.state.record_length = 0\n  }\n  __onField(){\n    const {cast, rtrim, max_record_size} = this.options\n    const {enabled, wasQuoting} = this.state\n    // Deal with from_to options\n    if(this.options.columns !== true && enabled === false){\n      return this.__resetField()\n    }\n    let field = this.state.field.toString()\n    if(rtrim === true && wasQuoting === false){\n      field = field.trimRight()\n    }\n    if(cast === true){\n      const [err, f] = this.__cast(field)\n      if(err !== undefined) return err\n      field = f\n    }\n    this.state.record.push(field)\n    // Increment record length if record size must not exceed a limit\n    if(max_record_size !== 0 && typeof field === 'string'){\n      this.state.record_length += field.length\n    }\n    this.__resetField()\n  }\n  __resetField(){\n    this.state.field.reset()\n    this.state.wasQuoting = false\n  }\n  // Return a tuple with the error and the casted value\n  __cast(field){\n    const isColumns = Array.isArray(this.options.columns)\n    // Dont loose time calling cast if the field wont be part of the final record\n    if( isColumns === true && this.options.columns.length <= this.state.record.length ){\n      return [undefined, undefined]\n    }\n    const context = {\n      column: isColumns === true ?\n        this.options.columns[this.state.record.length].name :\n        this.state.record.length,\n      empty_lines: this.info.empty_lines,\n      header: this.options.columns === true,\n      index: this.state.record.length,\n      invalid_field_length: this.info.invalid_field_length,\n      quoting: this.state.wasQuoting,\n      lines: this.info.lines,\n      records: this.info.records\n    }\n    if(this.state.castField !== null){\n      try{\n        return [undefined, this.state.castField.call(null, field, context)]\n      }catch(err){\n        return [err]\n      }\n    }\n    if(this.__isFloat(field)){\n      return [undefined, parseFloat(field)]\n    }else if(this.options.cast_date !== false){\n      return [undefined, this.options.cast_date.call(null, field, context)]\n    }\n    return [undefined, field]\n  }\n  // Keep it in case we implement the `cast_int` option\n  // __isInt(value){\n  //   // return Number.isInteger(parseInt(value))\n  //   // return !isNaN( parseInt( obj ) );\n  //   return /^(\\-|\\+)?[1-9][0-9]*$/.test(value)\n  // }\n  __isFloat(value){\n    return (value - parseFloat( value ) + 1) >= 0 // Borrowed from jquery\n  }\n  __compareBytes(sourceBuf, targetBuf, pos, firtByte){\n    if(sourceBuf[0] !== firtByte) return 0\n    const sourceLength = sourceBuf.length\n    for(let i = 1; i < sourceLength; i++){\n      if(sourceBuf[i] !== targetBuf[pos+i]) return 0\n    }\n    return sourceLength\n  }\n  __needMoreData(i, bufLen, end){\n    if(end){\n      return false\n    }\n    const {comment, delimiter, escape} = this.options\n    const {quoting, recordDelimiterMaxLength} = this.state\n    const numOfCharLeft = bufLen - i - 1\n    const requiredLength = Math.max(\n      // Skip if the remaining buffer smaller than comment\n      comment ? comment.length : 0,\n      // Skip if the remaining buffer smaller than row delimiter\n      recordDelimiterMaxLength,\n      // Skip if the remaining buffer can be row delimiter following the closing quote\n      // 1 is for quote.length\n      quoting ? (1 + recordDelimiterMaxLength) : 0,\n      // Skip if the remaining buffer can be delimiter\n      delimiter.length,\n      // Skip if the remaining buffer can be escape sequence\n      // 1 is for escape.length\n      1\n    )\n    return numOfCharLeft < requiredLength\n  }\n  __isDelimiter(chr, buf, pos){\n    const {delimiter} = this.options\n    const delLength = delimiter.length\n    if(delimiter[0] !== chr) return 0\n    for(let i = 1; i < delLength; i++){\n      if(delimiter[i] !== buf[pos+i]) return 0\n    }\n    return delimiter.length\n  }\n  __isRecordDelimiter(chr, buf, pos){\n    const {record_delimiter} = this.options\n    const recordDelimiterLength = record_delimiter.length\n    loop1: for(let i = 0; i < recordDelimiterLength; i++){\n      const rd = record_delimiter[i]\n      const rdLength = rd.length\n      if(rd[0] !== chr){\n        continue\n      }\n      for(let j = 1; j < rdLength; j++){\n        if(rd[j] !== buf[pos+j]){\n          continue loop1\n        }\n      }\n      return rd.length\n    }\n    return 0\n  }\n  __autoDiscoverRowDelimiter(buf, pos){\n    const chr = buf[pos]\n    if(chr === cr){\n      if(buf[pos+1] === nl){\n        this.options.record_delimiter.push(Buffer.from('\\r\\n'))\n        this.state.recordDelimiterMaxLength = 2\n        return 2\n      }else{\n        this.options.record_delimiter.push(Buffer.from('\\r'))\n        this.state.recordDelimiterMaxLength = 1\n        return 1\n      }\n    }else if(chr === nl){\n      this.options.record_delimiter.push(Buffer.from('\\n'))\n      this.state.recordDelimiterMaxLength = 1\n      return 1\n    }\n    return 0\n  }\n  __error(msg){\n    const {skip_lines_with_error} = this.options\n    const err = new Error(msg)\n    if(skip_lines_with_error){\n      this.state.recordHasError = true\n      this.emit('skip', err)\n      return undefined\n    }else{\n      return err\n    }\n  }\n}\n\nconst parse = function(){\n  let data, options, callback\n  for(let i in arguments){\n    const argument = arguments[i]\n    const type = typeof argument\n    if(data === undefined && (typeof argument === 'string' || Buffer.isBuffer(argument))){\n      data = argument\n    }else if(options === undefined && isObject(argument)){\n      options = argument\n    }else if(callback === undefined && type === 'function'){\n      callback = argument\n    }else{\n      throw new Error(`Invalid argument: got ${JSON.stringify(argument)} at index ${i}`)\n    }\n  }\n  const parser = new Parser(options)\n  if(callback){\n    const records = options === undefined || options.objname === undefined ? [] : {}\n    parser.on('readable', function(){\n      let record\n      while(record = this.read()){\n        if(options === undefined || options.objname === undefined){\n          records.push(record)\n        }else{\n          records[record[0]] = record[1]\n        }\n      }\n    })\n    parser.on('error', function(err){\n      callback(err, undefined, parser.info)\n    })\n    parser.on('end', function(){\n      callback(undefined, records, parser.info)\n    })\n  }\n  if(data !== undefined){\n    parser.write(data)\n    parser.end()\n  }\n  return parser\n}\n\nparse.Parser = Parser\n\nmodule.exports = parse\n\nconst underscore = function(str){\n  return str.replace(/([A-Z])/g, function(_, match, index){\n    return '_' + match.toLowerCase()\n  })\n}\n\nconst isObject = function(obj){\n  return (typeof obj === 'object' && obj !== null && !Array.isArray(obj))\n}\n\nconst normalizeColumnsArray = function(columns){\n  // console.log('columns', columns)\n  const normalizedColumns = [];\n\n  for(let i=0; i< columns.length; i++){\n    const column = columns[i]\n    if(column === undefined || column === null || column === false){\n      normalizedColumns[i] = { disabled: true }\n    }else if(typeof column === 'string'){\n      normalizedColumns[i] = { name: column }\n    }else if(isObject(column)){\n      if(typeof column.name !== 'string'){\n        throw new Error(`Invalid Option columns: property \"name\" is required at position ${i} when column is an object literal`)\n      }\n      normalizedColumns[i] = column\n    }else{\n      throw new Error(`Invalid Option columns: expect a string or an object, got ${JSON.stringify(column)} at position ${i}`)\n    }\n  }\n  // console.log(normalizedColumns)\n  return normalizedColumns;\n}\n","import { FlightLogHeader } from './types';\n\nexport const INT_FIELDS = new Set([\n  FlightLogHeader.AircraftBatteryCell1Voltage,\n  FlightLogHeader.AircraftBatteryCell2Voltage,\n  FlightLogHeader.AircraftBatteryCell3Voltage,\n  FlightLogHeader.AircraftBatteryCell4Voltage,\n  FlightLogHeader.AircraftBatteryCharge,\n  FlightLogHeader.AircraftBatteryCurrent,\n  FlightLogHeader.AircraftBatteryTemperature,\n  FlightLogHeader.AircraftBatteryVoltage,\n  FlightLogHeader.AircraftCameraLensFocusModeValue,\n  FlightLogHeader.AircraftCameraLensFocusStatusValue,\n  FlightLogHeader.AircraftCameraModeValue,\n  FlightLogHeader.AircraftFlightModeValue,\n  FlightLogHeader.AircraftGPSSignalValue,\n  FlightLogHeader.AircraftNoFlyValue,\n  FlightLogHeader.AircraftSatellites,\n  FlightLogHeader.GimbalModeValue,\n  FlightLogHeader.AircraftSmartGoHomeRadius,\n  FlightLogHeader.AircraftSmartGoHomeCountdown,\n  FlightLogHeader.AircraftVelocityX,\n  FlightLogHeader.AircraftVelocityY,\n  FlightLogHeader.AircraftVelocityZ,\n  FlightLogHeader.RCHorizontalAccuaracy,\n  FlightLogHeader.RCLatitude,\n  FlightLogHeader.RCLongitude,\n  FlightLogHeader.LandingGearStatusValue,\n  FlightLogHeader.LandingGearModeValue,\n  FlightLogHeader.RCStateValue,\n  FlightLogHeader.RCLandingGearValue,\n]);\n\nexport const FLOAT_FIELDS = new Set([\n  FlightLogHeader.AircraftBarometricAltitude,\n  FlightLogHeader.AircraftBatteryPowerPercent,\n  FlightLogHeader.AircraftCameraSDCardRemainingPercent,\n  FlightLogHeader.AircraftHeading,\n  FlightLogHeader.AircraftLatitude,\n  FlightLogHeader.AircraftLongitude,\n  FlightLogHeader.AircraftNoFlyLatitude,\n  FlightLogHeader.AircraftNoFlyLongitude,\n  FlightLogHeader.AircraftNoFlyRadius,\n  FlightLogHeader.AircraftPitch,\n  FlightLogHeader.AircraftRoll,\n  FlightLogHeader.AircraftSmartGoHomeFlightReturnTime,\n  FlightLogHeader.AircraftSmartGoHomeFlightTimeRemaining,\n  FlightLogHeader.AircraftSmartGoHomeLandingPower,\n  FlightLogHeader.AircraftSmartGoHomeLandingTime,\n  FlightLogHeader.AircraftSmartGoHomeReturnPower,\n  FlightLogHeader.AircraftSpeed,\n  FlightLogHeader.AircraftUltrasonicAltitude,\n  FlightLogHeader.DeviceToAircraftDistance,\n  FlightLogHeader.ElapsedTime,\n  FlightLogHeader.GimbalPitch,\n  FlightLogHeader.GimbalPitchAtStop,\n  FlightLogHeader.GimbalRoll,\n  FlightLogHeader.GimbalRollAtStop,\n  FlightLogHeader.GimbalYaw,\n  FlightLogHeader.GimbalYawAtStop,\n  FlightLogHeader.HomeLatitude,\n  FlightLogHeader.HomeLongitude,\n  FlightLogHeader.RCBatteryPercentRemaining,\n  FlightLogHeader.RCLeftHorizontal,\n  FlightLogHeader.RCRightHorizontal,\n  FlightLogHeader.RCLeftVertical,\n  FlightLogHeader.RCRightVertical,\n]);\n\nexport const BOOL_FIELDS = new Set([\n  FlightLogHeader.AircraftCameraBurstCapture,\n  FlightLogHeader.AircraftCameraIntervalCapture,\n  FlightLogHeader.AircraftCameraLensAFAssistant,\n  FlightLogHeader.AircraftCameraLensAFEnabled,\n  FlightLogHeader.AircraftCameraLensAssistantWorking,\n  FlightLogHeader.AircraftCameraOverheated,\n  FlightLogHeader.AircraftCameraRawCapture,\n  FlightLogHeader.AircraftCameraBurstCapture,\n  FlightLogHeader.AircraftCameraRecording,\n  FlightLogHeader.AircraftCameraSDCardExists,\n  FlightLogHeader.AircraftCameraSensorError,\n  FlightLogHeader.AircraftCameraSingleCapture,\n  FlightLogHeader.AircraftCameraStoringPhoto,\n  FlightLogHeader.AircraftFlying,\n  FlightLogHeader.AircraftIMUPreheating,\n  FlightLogHeader.AircraftMotorsOn,\n  FlightLogHeader.AircraftSmartGoHomeRequesting,\n  FlightLogHeader.AircraftUltrasonicOn,\n  FlightLogHeader.AircraftVisionOn,\n  FlightLogHeader.LandingGearIsMovable,\n  FlightLogHeader.RCGoHome,\n  FlightLogHeader.RCRecord,\n  FlightLogHeader.RCShutter,\n  FlightLogHeader.RCPlayback,\n  FlightLogHeader.RCPause,\n  FlightLogHeader.RCCustom1,\n  FlightLogHeader.RCCustom2,\n  FlightLogHeader.RCSattelites,\n  FlightLogHeader.RCGSPDataIsValid,\n  FlightLogHeader.RCLeftHorizontal,\n  FlightLogHeader.RCRightHorizontal,\n  FlightLogHeader.RCLeftVertical,\n  FlightLogHeader.RCRightVertical,\n  FlightLogHeader.AircraftCameraChangeableLensSupported,\n  FlightLogHeader.AircraftCameraLensInstalled,\n  FlightLogHeader.AircraftCameraLensMFAssistant,\n]);\n\nexport const DATE_FIELDS = new Set([\n    FlightLogHeader.DateTime,\n]);\n","import parse from 'csv-parse';\n\nimport { FlightLogRow, FlightLogHeader, FlightLogMetaData, FlightLog, FlightLogEvent } from './types';\nimport { INT_FIELDS, BOOL_FIELDS, FLOAT_FIELDS, DATE_FIELDS } from './field-types';\n\nconst syncParse = require('csv-parse/lib/sync');\n\n\nconst META_REGEX = {\n  appVersion: /^#DroneDeploy\\s+(.+)$/,\n  sessionId: /^Session ID\\s+(.+)$/,\n  sessionStart: /^Session Start\\s+(.+)$/,\n  sessionEnd: /^Date\\/Time \\(UTC\\)\\s+(.+)$/,\n  deviceModel: /^Device Model\\s+(.+)$/,\n  deviceOS: /^Device Operating System\\s+(.+)$/,\n  aircraftModel: /^Aircraft Model\\s+(.+)$/,\n  aircraftName: /^Aircraft Name\\s+(.+)$/,\n  aircraftFirmware: /^Aircraft Firmware\\s+(.+)$/,\n  batteryChargeVolume: /^Full Charge Volume \\(mAh\\)\\s+(.+)$/,\n  batteryRemainingLife: /^Remaining Life \\(%\\)\\s+(.+)$/,\n  batteryDischarges: /^Discharges\\s+(.+)$/,\n  batteryCells: /^Battery Cells Number\\s+(.+)$/,\n  batterySerialNumber: /^Battery Serial Number\\s+(.+)$/,\n  batteryFirmware: /^Battery Firmware\\s+(.+)$/,\n  fcSerialNumber: /^Flight Controller Serial Number\\s+(.+)$/,\n  fcFirmware: /^Flight Controller Firmware\\s+(.+)$/,\n  footerLines: /^#Flight Recorder Session End|^Date\\/Time \\(UTC\\)|^Elapsed Time \\(sec\\)/,\n  gimbalFirmware: /^Gimbal Firmware\\s+(.+)$/,\n  rcSerialNumber: /^Remote Control Serial Number\\s+(.+)$/,\n  rcFirmware: /^Remote Control Firmware\\s+(.+)$/,\n  cameraSerialNumber: /^Camera Serial Number\\s+(.+)$/,\n  elapsedTime: /^Elapsed Time \\(sec\\)\\s+(.+)$/,\n  userId: /^User ID\\s+(.+)$/,\n  organizationId: /^Organization ID\\s+(.+)$/,\n  platform: /^Platform\\s+(.+)$/,\n};\n\nexport type Subscriber<T> = (value: T) => void;\nexport type ErrorSubscriber = (value: any) => void;\nexport type CompletionSubscriber = () => void;\n\nexport interface QuasiObservable<T> {\n    subscribe(sub: Subscriber<T>, errSub?: ErrorSubscriber, completionSub?: CompletionSubscriber): void;\n    toPromise(): Promise<T>;\n}\n\nexport class QuasiSubject<T> implements QuasiObservable<T> {\n    private subscribers: Subscriber<T>[] = [];\n    private errorSubscribers: ErrorSubscriber[] = [];\n    private completionSubscribers: CompletionSubscriber[] = [];\n    private isFinished = false;\n\n    next(value: T) {\n        if (this.isFinished) {\n            return;\n        }\n        this.subscribers.forEach((s) => s(value));\n    }\n\n    complete() {\n        if (this.isFinished) {\n            return;\n        }\n        this.isFinished = true;\n        this.completionSubscribers.forEach((sub) => sub());\n    }\n\n    error(error: any) {\n        if (this.isFinished) {\n            return;\n        }\n        this.errorSubscribers.forEach((errSub) => errSub(error));\n        this.complete();\n    }\n\n    subscribe(sub: Subscriber<T>, errSub?: ErrorSubscriber, completionSub?: CompletionSubscriber) {\n        this.subscribers.push(sub);\n        if (errSub) {\n            this.errorSubscribers.push(errSub);\n        }\n        if (completionSub) {\n            this.completionSubscribers.push(completionSub);\n        }\n    }\n\n    toPromise(): Promise<T> {\n        const source = this;\n        return new Promise<T>(function (resolve, reject) {\n            let value: T;\n            source.subscribe(function (v) {\n                value = v;\n            }, reject, function () {\n                resolve(value);\n            });\n        });\n    }\n}\n\nexport function parseLogStream(logStream: QuasiSubject<string>): QuasiObservable<FlightLogEvent> {\n  const headerMetaLines: string[] = [];\n  let meta = {} as FlightLogMetaData;\n  let rowHeaderLine: string;\n  let row: FlightLogRow;\n\n  const progress = { index: 0, completed: false };\n  let end: any;\n  const result = new QuasiSubject<FlightLogEvent>();\n\n  logStream.subscribe((line: string) => {\n    line = line.trim();\n    if (!line.length) {\n      return;\n    }\n\n    if (!rowHeaderLine) {\n      if (line.startsWith(FlightLogHeader.DateTime.split(' ')[0])) {  // Strip off timezone.\n        rowHeaderLine = line;\n        meta = parseMetaData(headerMetaLines, []);\n        result.next({\n          meta,\n          rowIndex: progress.index\n        });\n      } else {\n        headerMetaLines.push(line);\n        progress.index++;\n      }\n      return;\n    }\n\n    if (META_REGEX.footerLines.test(line)) {\n      if (META_REGEX.sessionEnd.test(line)) {\n        end = fromUtcDateStr(findMatch([line], META_REGEX.sessionEnd));\n      } else if (META_REGEX.elapsedTime.test(line)) {\n        const elapsed = findMatch([line], META_REGEX.elapsedTime);\n\n        // This is the end of the parsing. Because normal lines are parsed through a Promise, they will be delivered\n        // asynchronously. So we must ensure that this result is also delivered asynchronously.\n        setTimeout(() => {\n          const parsedElapsed = elapsed === 'N/A' ? 0 : parseFloat(elapsed);\n          if (parsedElapsed) {\n            meta.session.elapsed = parsedElapsed;\n          }\n          if (end) {\n            meta.session.end = end;\n          }\n          result.next({\n            meta,\n            rowIndex: progress.index++,\n          });\n          result.complete();\n          progress.completed = true;\n        }, 0);\n      }\n    } else {\n      parseBody([rowHeaderLine, line], true).then((rows) => {\n        row = rows[0];\n        meta.session.end = row[FlightLogHeader.DateTime];\n        meta.session.elapsed = row[FlightLogHeader.ElapsedTime];\n        result.next({\n          meta,\n          rowIndex: progress.index++,\n          row,\n          info: parseJsonInfo(row.Info),  // Parsed Info column, if the column was populated with a JSON array.\n        })\n      });\n    }\n\n  }, (err) => { console.error('parsing error: ' + err); result.complete(); }, () => {\n    if (!progress.completed) {\n      setTimeout(() => {\n        result.complete();\n        progress.completed = true;\n      }, 0);\n    }\n  });\n\n  return result;\n}\n\nexport function parseLog(log: String): Promise<FlightLog> {\n  const lines = log.split('\\n');\n  const subject = new QuasiSubject<string>();\n  const parse = parseLogStream(subject);\n\n  const flightLog: FlightLog = {\n    metaData: {} as FlightLogMetaData,\n    rows: [],\n    infos: []\n  }\n  parse.subscribe((event) => {\n    // The metadata is updated as the file is parsed, so always grab the latest one.\n    flightLog.metaData = (event.meta) ? event.meta : flightLog.metaData;\n    if (event.row) {\n      flightLog.rows.push(event.row);\n    }\n    if (event.info) {\n      // @ts-ignore\n      flightLog.infos.push(event.info);\n    }\n  });\n  lines.forEach(l => subject.next(l));\n  subject.complete();\n\n  return new Promise<FlightLog>((resolve, reject) => {\n    parse.toPromise().then(() => resolve(flightLog)).catch((reason => reject(reason)));\n  });\n}\n\nfunction parseBody(lines: string[], sync?: boolean): Promise<FlightLogRow[]> {\n  const text = lines.join('\\n');\n  const options = {\n    delimiter: '\\t',\n    escape: null,\n    from: 1,\n    quote: null,\n    relax_column_count: true,\n  };\n\n  return new Promise((resolve, reject) => {\n    const onResults = (err: any, result: string[]) => {\n      if (err) {\n        return reject(err);\n      }\n\n      const [headers, ...rows] = result;\n\n      const logs = rows.map((row) => {\n        const log = {} as FlightLogRow;\n        for (let i = 0; i < headers.length; i++) {\n          const header = headers[i].trim() as FlightLogHeader;\n          let value: any = row[i];\n\n          if (INT_FIELDS.has(header)) {\n            value = parseInt(value, 10);\n          }\n\n          if (FLOAT_FIELDS.has(header)) {\n            value = parseFloat(value);\n          }\n\n          if (BOOL_FIELDS.has(header)) {\n            value = value !== '0';\n          }\n\n          if (DATE_FIELDS.has(header)) {\n            value = fromUtcDateStr(value);\n          }\n\n          log[header] = value;\n        }\n\n        return log;\n      });\n\n      resolve(logs);\n    };\n    if (sync) {\n      const results = syncParse(text, options);\n      onResults(undefined, results);\n    } else {\n      // @ts-ignore\n      parse(text, options, onResults);\n    }\n  });\n}\n\nfunction findMatch(search: string[], regex: RegExp, isNum?: boolean) {\n  let match;\n  for (let str of search) {\n    match = str.match(regex);\n    if (match) {\n      break;\n    }\n  }\n\n  if (!match) {\n    return isNum ? '0' : 'N/A';\n  }\n\n  return match[1];\n}\n\nfunction isValidDate(d: any) {\n  return d instanceof Date && !isNaN(d as any);\n}\n\nexport function fromUtcDateStr(utcDateStr: string) {\n  if (isValidDate(utcDateStr)) {\n    return utcDateStr as any as Date;\n  }\n  const isBadDate = !utcDateStr || !utcDateStr.trim().length || utcDateStr === 'N/A';\n  if (isBadDate) {\n    return null;\n  }\n  if (!/Z$/.test(utcDateStr)) {\n    utcDateStr = utcDateStr + '.000Z';\n  }\n  return new Date(utcDateStr);\n}\n\nfunction parseMetaData(headers: string[], footers: string[]): FlightLogMetaData {\n  const meta = [...headers, ...footers];\n  let end = findMatch(meta, META_REGEX.sessionEnd);\n  let elapsed = findMatch(meta, META_REGEX.elapsedTime);\n\n  // if we weren't able to parse an end date or an elapsed time from our footer (which is really just the last three\n  // lines of the log file), it's likely that we have a truncated log file. if that's the case, we can still salvage\n  // some valid data by parsing the date and elapsed time from the very last log row in the file, which is what we're\n  // doing below. it's pretty brittle, but it's preferred to having an invalid end date and a NaN elapsed time.\n  if ((end === 'N/A' || elapsed === 'N/A') && footers.length > 0) {\n    const lastLine = footers[footers.length - 1];\n    const pieces = lastLine.split('\\t');\n\n    // if we don't have at least two pieces, i don't know what is in `footer` so i'm just going to leave it alone\n    if (pieces.length >= 2) {\n      end = pieces[0];\n      elapsed = pieces[1];\n    }\n  }\n\n  return {\n    appVersion: findMatch(meta, META_REGEX.appVersion),\n    session: {\n      id: findMatch(meta, META_REGEX.sessionId),\n      start: fromUtcDateStr(findMatch(meta, META_REGEX.sessionStart)) as Date,\n      end: fromUtcDateStr(end),\n      elapsed: elapsed === 'N/A' ? 0 : parseFloat(elapsed),\n    },\n    device: {\n      model: findMatch(meta, META_REGEX.deviceModel),\n      os: findMatch(meta, META_REGEX.deviceOS).replace(/\\t/g, ' '),\n      platform: findMatch(meta, META_REGEX.platform),\n    },\n    aircraft: {\n      model: findMatch(meta, META_REGEX.aircraftModel),\n      name: findMatch(meta, META_REGEX.aircraftName),\n      firmware: findMatch(meta, META_REGEX.aircraftFirmware),\n    },\n    battery: {\n      chargeVolume: parseInt(findMatch(meta, META_REGEX.batteryChargeVolume, true), 10),\n      remainingLifePercent: parseInt(findMatch(meta, META_REGEX.batteryRemainingLife, true), 10),\n      discharges: parseInt(findMatch(meta, META_REGEX.batteryDischarges, true), 10),\n      cells: parseInt(findMatch(meta, META_REGEX.batteryCells, true), 10),\n      firmware: findMatch(meta, META_REGEX.batteryFirmware),\n      serialNumber: findMatch(meta, META_REGEX.batterySerialNumber),\n    },\n    flightController: {\n      serialNumber: findMatch(meta, META_REGEX.fcSerialNumber),\n      firmware: findMatch(meta, META_REGEX.fcFirmware),\n    },\n    gimbal: {\n      firmware: findMatch(meta, META_REGEX.gimbalFirmware),\n    },\n    remoteController: {\n      serialNumber: findMatch(meta, META_REGEX.rcSerialNumber),\n      firmware: findMatch(meta, META_REGEX.rcFirmware),\n    },\n    camera: {\n      serialNumber: findMatch(meta, META_REGEX.cameraSerialNumber),\n    },\n    user: {\n      userId: findMatch(meta, META_REGEX.userId),\n      organizationId: findMatch(meta, META_REGEX.organizationId),\n    },\n  };\n}\n\n/**\n * Parse out the given string and return an object if the string is JSON, return undefined otherwise.\n *\n * @param info\n */\nfunction parseJsonInfo(info: string): undefined|Array<object> {\n  if (!info) {\n    return undefined;\n  }\n  try {\n    return JSON.parse(info);\n  }\n  catch (e) {\n    return undefined;\n  }\n}\n"],"names":["FlightLogHeader","require$$0","ResizeableBuffer","parse"],"mappings":"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"}
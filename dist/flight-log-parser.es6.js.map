{"version":3,"file":"flight-log-parser.es6.js","sources":["../src/types.ts","../src/field-types.ts","../src/parser.ts"],"sourcesContent":["export enum FlightLogHeader {\n  DateTime = 'Date/Time (UTC)',\n  ElapsedTime = 'Elapsed Time (sec)',\n  Info = 'Info',\n  DeviceLatitude = 'Device Latitude (Degrees)',\n  DeviceLongitude = 'Device Longitude (Degrees)',\n  DeviceLocationLastUpdated = 'Device Location Last Updated (ms)',\n  AircraftBatteryPowerPercent = 'Aircraft Battery Power (%)',\n  AircraftBatteryCharge = 'Aircraft Battery Charge (mAh)',\n  AircraftBatteryCurrent = 'Aircraft Battery Current (mA)',\n  AircraftBatteryVoltage = 'Aircraft Battery Voltage (mV)',\n  AircraftBatteryTemperature = 'Aircraft Battery Temperature (Fahrenheit)',\n  AircraftBatteryLastUpdated = 'Aircraft Battery Last Updated (ms)',\n  AircraftBatteryCell1Voltage = 'Aircraft Battery Cell 1 Voltage',\n  AircraftBatteryCell2Voltage = 'Aircraft Battery Cell 2 Voltage',\n  AircraftBatteryCell3Voltage = 'Aircraft Battery Cell 3 Voltage',\n  AircraftBatteryCell4Voltage = 'Aircraft Battery Cell 4 Voltage',\n  AircraftBatteryCellVoltageLastUpdated = 'Aircraft Battery Cell Voltage Last Updated (ms)',\n  AircraftLatitude = 'Aircraft Latitude (Degrees)',\n  AircraftLongitude = 'Aircraft Longitude (Degrees)',\n  AircraftSpeed = 'Aircraft Speed (mph)',\n  AircraftBarometricAltitude = 'Aircraft Barometric Altitude (ft)',\n  AircraftHeading = 'Aircraft Heading (Degrees)',\n  AircraftVelocityX = 'Aircraft Vel - X (mph)',\n  AircraftVelocityY = 'Aircraft Vel - Y (mph)',\n  AircraftVelocityZ = 'Aircraft Vel - Z (mph)',\n  AircraftPitch = 'Aircraft Pitch (Degrees)',\n  AircraftRoll = 'Aircraft Roll (Degrees)',\n  AircraftSatellites = 'Aircraft Satellites',\n  AircraftMotorsOn = 'Aircraft Motors On',\n  AircraftFlying = 'Aircraft Flying',\n  AircraftFlightMode = 'Aircraft Flight Mode',\n  AircraftFlightModeValue = 'Aircraft Flight Mode Value',\n  AircraftIMUPreheating = 'Aircraft IMU Preheating',\n  AircraftUltrasonicOn = 'Aircraft Ultrasonic On',\n  AircraftUltrasonicAltitude = 'Aircraft Ultrasonic Altitude (ft)',\n  AircraftVisionOn = 'Aircraft Vision On',\n  AircraftGPSSignal = 'Aircraft GPS Signal',\n  AircraftGPSSignalValue = 'Aircraft GPS Signal Value',\n  AircraftNoFly = 'Aircraft No-fly',\n  AircraftNoFlyValue = 'Aircraft No-fly Value',\n  AircraftNoFlyLatitude = 'Aircraft No-fly Latitude (Degrees)',\n  AircraftNoFlyLongitude = 'Aircraft No-fly Longitude (Degrees)',\n  AircraftNoFlyRadius = 'Aircraft No-fly Radius (ft)',\n  HomeLatitude = 'Home Latitude (Degrees)',\n  HomeLongitude = 'Home Longitude (Degrees)',\n  AircraftSmartGoHomeFlightTimeRemaining = 'Aircraft Smart Go-home Flight Time Remaining (sec)',\n  AircraftSmartGoHomeFlightReturnTime = 'Aircraft Smart Go-home Flight Return Time (sec)',\n  AircraftSmartGoHomeLandingTime = 'Aircraft Smart Go-home Landing Time (sec)',\n  AircraftSmartGoHomeReturnPower = 'Aircraft Smart Go-home Return Power (%)',\n  AircraftSmartGoHomeLandingPower = 'Aircraft Smart Go-home Landing Power (%)',\n  AircraftSmartGoHomeRadius = 'Aircraft Smart Go-home Radius (ft)',\n  AircraftSmartGoHomeCountdown = 'Aircraft Smart Go-home Countdown (sec)',\n  AircraftSmartGoHomeRequesting = 'Aircraft Smart Go-home Requesting',\n  AircraftSystemStateLastUpdated = 'Aircraft System State Last Updated (ms)',\n  GimbalPitch = 'Gimbal Pitch (Degrees)',\n  GimbalRoll = 'Gimbal Roll (Degrees)',\n  GimbalYaw = 'Gimbal Yaw (Degrees)',\n  GimbalMode = 'Gimbal Mode',\n  GimbalModeValue = 'Gimbal Mode Value',\n  GimbalPitchAtStop = 'Gimbal Pitch at Stop',\n  GimbalRollAtStop = 'Gimbal Roll at Stop',\n  GimbalYawAtStop = 'Gimbal Yaw at Stop',\n  GimbalStatusLastUpdated = 'Gimbal Status Last Updated (ms)',\n  LandingGearIsMovable = 'Landing Gear is Movable',\n  LandingGearStatus = 'Landing Gear Status',\n  LandingGearStatusValue = 'Landing Gear Status Value',\n  LandingGearMode = 'Landing Gear Mode',\n  LandingGearModeValue = 'Landing Gear Mode Value',\n  LandingGearLastUpdated = 'Landing Gear Last Updated (ms)',\n  RCState = 'RC State',\n  RCStateValue = 'RC State Value',\n  RCLeftHorizontal = 'RC Left Horizontal',\n  RCLeftVertical = 'RC Left Vertical',\n  RCRightHorizontal = 'RC Right Horizontal',\n  RCRightVertical = 'RC Right Vertical',\n  RCLeftWheel = 'RC Left Wheel',\n  RCRightWheel = 'RC Right Wheel',\n  RCLandingGear = 'RC Landing Gear',\n  RCLandingGearValue = 'RC Landing Gear Value',\n  RCGoHome = 'RC Go Home',\n  RCRecord = 'RC Record ',\n  RCShutter = 'RC Shutter',\n  RCPlayback = 'RC Playback',\n  RCPause = 'RC Pause',\n  RCCustom1 = 'RC Custom 1',\n  RCCustom2 = 'RC Custom 2',\n  RCStateLastUpdated = 'RC State Last Updated (ms)',\n  RCBatteryPercentRemaining = 'RC Battery (%)',\n  RCBatteryStateLastUpdated = 'RC Battery State Last Updated (ms)',\n  RCSattelites = 'RC Sattelites',\n  RCHorizontalAccuaracy = 'RC Horizontal Accuaracy (ft)',\n  RCLatitude = 'RC Latitude (Degrees)',\n  RCLongitude = 'RC Longitude (Degrees)',\n  RCGSPDataIsValid = 'RC GSP Data is Valid',\n  RCGPSStateLastUpdated = 'RC GPS State Last Updated (ms)',\n  RCSignal1 = 'RC Signal 1',\n  RCSignal2 = 'RC Signal 2',\n  RCSignalLastUpdated = 'RC Signal Last Updated (ms)',\n  LBSignal1 = 'LB Signal 1',\n  LBSignal2 = 'LB Signal 2',\n  LBSignalLastUpdated = 'LB Signal Last Updated (ms)',\n  AircraftCameraMode = 'Aircraft Camera Mode',\n  AircraftCameraModeValue = 'Aircraft Camera Mode Value',\n  AircraftCameraOverheated = 'Aircraft Camera Overheated',\n  AircraftCameraSensorError = 'Aircraft Camera Sensor Error',\n  AircraftCameraRecording = 'Aircraft Camera Recording',\n  AircraftCameraRawCapture = 'Aircraft Camera Raw Capture',\n  AircraftCameraIntervalCapture = 'Aircraft Camera Interval Capture',\n  AircraftCameraBurstCapture = 'Aircraft Camera Burst Capture',\n  AircraftCameraSingleCapture = 'Aircraft Camera Single Capture',\n  AircraftCameraStoringPhoto = 'Aircraft Camera Storing Photo',\n  AircraftCameraStateLastUpdated = 'Aircraft Camera State Last Updated (ms)',\n  AircraftCameraSDCardExists = 'Aircraft Camera SD Card Exists',\n  AircraftCameraSDCardRemainingPercent = 'Aircraft Camera SD Card Remaining (%)',\n  AircraftCameraSDCardStateLastUpdated = 'Aircraft Camera SD Card State Last Updated (ms)',\n  AircraftCameraChangeableLensSupported = 'Aircraft Camera Changeable Lens Supported',\n  AircraftCameraLensInstalled = 'Aircraft Camera Lens Installed',\n  AircraftCameraLensType = 'Aircraft Camera Lens Type',\n  AircraftCameraLensAFEnabled = 'Aircraft Camera Lens AF Enabled',\n  AircraftCameraLensFocusMode = 'Aircraft Camera Lens Focus Mode',\n  AircraftCameraLensFocusModeValue = 'Aircraft Camera Lens Focus Mode Value',\n  AircraftCameraLensFocusStatus = 'Aircraft Camera Lens Focus Status',\n  AircraftCameraLensFocusStatusValue = 'Aircraft Camera Lens Focus Status Value',\n  AircraftCameraLensMFAssistant = 'Aircraft Camera Lens MF Assistant',\n  AircraftCameraLensAFAssistant = 'Aircraft Camera Lens AF Assistant',\n  AircraftCameraLensAssistantWorking = 'Aircraft Camera Lens Assistant Working',\n  AircraftCameraLensStateLastUpdated = 'Aircraft Camera Lens State Last Updated (ms)',\n  DeviceToAircraftDistance = 'Device > Aircraft Distance - XY (ft)',\n}\n\nexport type FlightLogRow = {\n  [prop in FlightLogHeader]: any // because csv\n};\n\nexport type FlightLogMetaData = {\n  appVersion: string;\n  session: {\n    id: string;\n    start: Date;\n    end: Date;\n    elapsed: number;\n  };\n  device: {\n    model: string;\n    os: string;\n  };\n  aircraft: {\n    model: string;\n    name: string;\n    firmware: string;\n  };\n  battery: {\n    chargeVolume: number;\n    remainingLifePercent: number;\n    discharges: number;\n    cells: number;\n    firmware: string;\n    serialNumber: string;\n  };\n  flightController: {\n    serialNumber: string;\n    firmware: string;\n  };\n  gimbal: {\n    firmware: string;\n  };\n  remoteController: {\n    serialNumber: string;\n    firmware: string;\n  };\n  camera: {\n    serialNumber: string;\n  };\n};\n\nexport type FlightLog = {\n  metaData: FlightLogMetaData;\n  rows: FlightLogRow[];\n};\n\n// based off of types in ios/android SDK FlightMode enums\nexport const FLIGHT_MODE_MAPPING = {\n  0: 'Manual',\n  1: 'Attitude',\n  2: 'Attitude Course Lock',\n  3: 'Attitude Hover',\n  4: 'Hover',\n  5: 'GPS Blake',\n  6: 'GPS Attitude',\n  7: 'GPS Course Lock',\n  8: 'GPS Home',\n  9: 'GPS Hotpoint',\n  10: 'Assisted Takeoff',\n  11: 'Auto Takeoff',\n  12: 'Auto Landing',\n  13: 'Attitude Landing',\n  14: 'GPS Waypoint',\n  15: 'Go Home',\n  16: 'Click Go',\n  17: 'Joystick',\n  18: 'Attitude Limited',\n  19: 'Cinematic',\n  23: 'Attitude Limited',\n  24: 'Draw',\n  25: 'GPS Follow Me',\n  26: 'ActiveTrack',\n  27: 'TapFly',\n  28: 'Pano',\n  29: 'Farming',\n  30: 'FPV',\n  31: 'GPS Sport',\n  32: 'GPS Novice',\n  33: 'Confirm Landing',\n  35: 'Terrain Follow',\n  36: 'Palm Control',\n  37: 'Quick Shot',\n  38: 'Tripod',\n  39: 'ActiveTrack Spotlight',\n  41: 'Motors Just Started',\n  43: 'GPS Gentle',\n  255: 'Unknown',\n};\n","import { FlightLogHeader } from './types';\n\nexport const INT_FIELDS = new Set([\n  FlightLogHeader.AircraftBatteryCell1Voltage,\n  FlightLogHeader.AircraftBatteryCell2Voltage,\n  FlightLogHeader.AircraftBatteryCell3Voltage,\n  FlightLogHeader.AircraftBatteryCell4Voltage,\n  FlightLogHeader.AircraftBatteryCharge,\n  FlightLogHeader.AircraftBatteryCurrent,\n  FlightLogHeader.AircraftBatteryTemperature,\n  FlightLogHeader.AircraftBatteryVoltage,\n  FlightLogHeader.AircraftCameraLensFocusModeValue,\n  FlightLogHeader.AircraftCameraLensFocusStatusValue,\n  FlightLogHeader.AircraftCameraModeValue,\n  FlightLogHeader.AircraftFlightModeValue,\n  FlightLogHeader.AircraftGPSSignalValue,\n  FlightLogHeader.AircraftNoFlyValue,\n  FlightLogHeader.AircraftSatellites,\n  FlightLogHeader.GimbalModeValue,\n  FlightLogHeader.AircraftSmartGoHomeRadius,\n  FlightLogHeader.AircraftSmartGoHomeCountdown,\n  FlightLogHeader.AircraftVelocityX,\n  FlightLogHeader.AircraftVelocityY,\n  FlightLogHeader.AircraftVelocityZ,\n  FlightLogHeader.RCHorizontalAccuaracy,\n  FlightLogHeader.RCLatitude,\n  FlightLogHeader.RCLongitude,\n  FlightLogHeader.LandingGearStatusValue,\n  FlightLogHeader.LandingGearModeValue,\n  FlightLogHeader.RCStateValue,\n  FlightLogHeader.RCLandingGearValue,\n]);\n\nexport const FLOAT_FIELDS = new Set([\n  FlightLogHeader.AircraftBarometricAltitude,\n  FlightLogHeader.AircraftBatteryPowerPercent,\n  FlightLogHeader.AircraftCameraSDCardRemainingPercent,\n  FlightLogHeader.AircraftHeading,\n  FlightLogHeader.AircraftLatitude,\n  FlightLogHeader.AircraftLongitude,\n  FlightLogHeader.AircraftNoFlyLatitude,\n  FlightLogHeader.AircraftNoFlyLongitude,\n  FlightLogHeader.AircraftNoFlyRadius,\n  FlightLogHeader.AircraftPitch,\n  FlightLogHeader.AircraftRoll,\n  FlightLogHeader.AircraftSmartGoHomeFlightReturnTime,\n  FlightLogHeader.AircraftSmartGoHomeFlightTimeRemaining,\n  FlightLogHeader.AircraftSmartGoHomeLandingPower,\n  FlightLogHeader.AircraftSmartGoHomeLandingTime,\n  FlightLogHeader.AircraftSmartGoHomeReturnPower,\n  FlightLogHeader.AircraftSpeed,\n  FlightLogHeader.AircraftUltrasonicAltitude,\n  FlightLogHeader.DeviceToAircraftDistance,\n  FlightLogHeader.ElapsedTime,\n  FlightLogHeader.GimbalPitch,\n  FlightLogHeader.GimbalPitchAtStop,\n  FlightLogHeader.GimbalRoll,\n  FlightLogHeader.GimbalRollAtStop,\n  FlightLogHeader.GimbalYaw,\n  FlightLogHeader.GimbalYawAtStop,\n  FlightLogHeader.HomeLatitude,\n  FlightLogHeader.HomeLongitude,\n  FlightLogHeader.RCBatteryPercentRemaining,\n  FlightLogHeader.RCLeftHorizontal,\n  FlightLogHeader.RCRightHorizontal,\n  FlightLogHeader.RCLeftVertical,\n  FlightLogHeader.RCRightVertical,\n]);\n\nexport const BOOL_FIELDS = new Set([\n  FlightLogHeader.AircraftCameraBurstCapture,\n  FlightLogHeader.AircraftCameraIntervalCapture,\n  FlightLogHeader.AircraftCameraLensAFAssistant,\n  FlightLogHeader.AircraftCameraLensAFEnabled,\n  FlightLogHeader.AircraftCameraLensAssistantWorking,\n  FlightLogHeader.AircraftCameraOverheated,\n  FlightLogHeader.AircraftCameraRawCapture,\n  FlightLogHeader.AircraftCameraBurstCapture,\n  FlightLogHeader.AircraftCameraRecording,\n  FlightLogHeader.AircraftCameraSDCardExists,\n  FlightLogHeader.AircraftCameraSensorError,\n  FlightLogHeader.AircraftCameraSingleCapture,\n  FlightLogHeader.AircraftCameraStoringPhoto,\n  FlightLogHeader.AircraftFlying,\n  FlightLogHeader.AircraftIMUPreheating,\n  FlightLogHeader.AircraftMotorsOn,\n  FlightLogHeader.AircraftSmartGoHomeRequesting,\n  FlightLogHeader.AircraftUltrasonicOn,\n  FlightLogHeader.AircraftVisionOn,\n  FlightLogHeader.LandingGearIsMovable,\n  FlightLogHeader.RCGoHome,\n  FlightLogHeader.RCRecord,\n  FlightLogHeader.RCShutter,\n  FlightLogHeader.RCPlayback,\n  FlightLogHeader.RCPause,\n  FlightLogHeader.RCCustom1,\n  FlightLogHeader.RCCustom2,\n  FlightLogHeader.RCSattelites,\n  FlightLogHeader.RCGSPDataIsValid,\n  FlightLogHeader.RCLeftHorizontal,\n  FlightLogHeader.RCRightHorizontal,\n  FlightLogHeader.RCLeftVertical,\n  FlightLogHeader.RCRightVertical,\n  FlightLogHeader.AircraftCameraChangeableLensSupported,\n  FlightLogHeader.AircraftCameraLensInstalled,\n  FlightLogHeader.AircraftCameraLensMFAssistant,\n]);\n","const parse = require('csv-parse');\n\nimport { FlightLogRow, FlightLogHeader, FlightLogMetaData, FlightLog } from './types';\nimport { INT_FIELDS, BOOL_FIELDS, FLOAT_FIELDS } from './field-types';\n\nconst META_REGEX = {\n  appVersion: /^#DroneDeploy\\s+(.+)$/,\n  sessionId: /^Session ID\\s+(.+)$/,\n  sessionStart: /^Session Start\\s+(.+)$/,\n  sessionEnd: /^Date\\/Time \\(UTC\\)\\s+(.+)$/,\n  deviceModel: /^Device Model\\s+(.+)$/,\n  deviceOS: /^Device Operating System\\s+(.+)$/,\n  aircraftModel: /^Aircraft Model\\s+(.+)$/,\n  aircraftName: /^Aircraft Name\\s+(.+)$/,\n  aircraftFirmware: /^Aircraft Firmware\\s+(.+)$/,\n  batteryChargeVolume: /^Full Charge Volume \\(mAh\\)\\s+(.+)$/,\n  batteryRemainingLife: /^Remaining Life \\(%\\)\\s+(.+)$/,\n  batteryDischarges: /^Discharges\\s+(.+)$/,\n  batteryCells: /^Battery Cells Number\\s+(.+)$/,\n  batterySerialNumber: /^Battery Serial Number\\s+(.+)$/,\n  batteryFirmware: /^Battery Firmware\\s+(.+)$/,\n  fcSerialNumber: /^Flight Controller Serial Number\\s+(.+)$/,\n  fcFirmware: /^Flight Controller Firmware\\s+(.+)$/,\n  gimbalFirmware: /^Gimbal Firmware\\s+(.+)$/,\n  rcSerialNumber: /^Remote Control Serial Number\\s+(.+)$/,\n  rcFirmware: /^Remote Control Firmware\\s+(.+)$/,\n  cameraSerialNumber: /^Camera Serial Number\\s+(.+)$/,\n  elapsedTime: /^Elapsed Time \\(sec\\)\\s+(.+)$/,\n};\n\nconst LOG_HEADER_LINES = 27;\nconst LOG_FOOTER_LINES = 3;\n\nexport function parseLog(log: String): Promise<FlightLog> {\n  const lines = log.split('\\n');\n\n  if (lines[lines.length - 1] === '') {\n    lines.pop();\n  }\n\n  const header = lines.slice(0, LOG_HEADER_LINES);\n  const footer = lines.slice(-LOG_FOOTER_LINES);\n  const body = lines.slice(LOG_HEADER_LINES, -LOG_FOOTER_LINES);\n  const metaData = parseMetaData(header, footer);\n\n  return parseBody(body).then((rows) => ({\n    metaData,\n    rows,\n  }));\n}\n\nfunction parseBody(lines: string[]): Promise<FlightLogRow[]> {\n  const text = lines.join('\\n');\n  const options = {\n    delimiter: '\\t',\n    from: 1,\n    relax_column_count: true,\n  };\n\n  return new Promise((resolve, reject) => {\n    parse(text, options, (err: any, result: string[]) => {\n      if (err) {\n        return reject(err);\n      }\n\n      const [headers, ...rows] = result;\n\n      const logs = rows.map((row) => {\n        const log = {} as FlightLogRow;\n        for (let i = 0; i < headers.length; i++) {\n          const header = headers[i].trim() as FlightLogHeader;\n          let value: any = row[i];\n\n          if (INT_FIELDS.has(header)) {\n            value = parseInt(value, 10);\n          }\n\n          if (FLOAT_FIELDS.has(header)) {\n            value = parseFloat(value);\n          }\n\n          if (BOOL_FIELDS.has(header)) {\n            value = value !== '0';\n          }\n\n          log[header] = value;\n        }\n\n        return log;\n      });\n\n      resolve(logs);\n    });\n  });\n}\n\nfunction findMatch(search: string[], regex: RegExp, isNum?: boolean) {\n  let match;\n  for (let str of search) {\n    match = str.match(regex);\n    if (match) {\n      break;\n    }\n  }\n\n  if (!match) {\n    return isNum ? '0' : 'N/A';\n  }\n\n  return match[1];\n}\n\nfunction parseMetaData(headers: string[], footers: string[]): FlightLogMetaData {\n  const meta = [...headers, ...footers];\n  let end = findMatch(meta, META_REGEX.sessionEnd);\n  let elapsed = findMatch(meta, META_REGEX.elapsedTime);\n\n  // if we weren't able to parse an end date or an elapsed time from our footer (which is really just the last three\n  // lines of the log file), it's likely that we have a truncated log file. if that's the case, we can still salvage\n  // some valid data by parsing the date and elapsed time from the very last log row in the file, which is what we're\n  // doing below. it's pretty brittle, but it's preferred to having an invalid end date and a NaN elapsed time.\n  if (end === 'N/A' || elapsed === 'N/A') {\n    const lastLine = footers[footers.length - 1];\n    const pieces = lastLine.split('\\t');\n\n    // if we don't have at least two pieces, i don't know what is in `footer` so i'm just going to leave it alone\n    if (pieces.length >= 2) {\n      end = pieces[0];\n      elapsed = pieces[1];\n    }\n  }\n\n  return {\n    appVersion: findMatch(meta, META_REGEX.appVersion),\n    session: {\n      id: findMatch(meta, META_REGEX.sessionId),\n      start: new Date(findMatch(meta, META_REGEX.sessionStart)),\n      end: new Date(end),\n      elapsed: elapsed === 'N/A' ? 0 : parseFloat(elapsed),\n    },\n    device: {\n      model: findMatch(meta, META_REGEX.deviceModel),\n      os: findMatch(meta, META_REGEX.deviceOS).replace(/\\t/g, ' '),\n    },\n    aircraft: {\n      model: findMatch(meta, META_REGEX.aircraftModel),\n      name: findMatch(meta, META_REGEX.aircraftName),\n      firmware: findMatch(meta, META_REGEX.aircraftFirmware),\n    },\n    battery: {\n      chargeVolume: parseInt(findMatch(meta, META_REGEX.batteryChargeVolume, true), 10),\n      remainingLifePercent: parseInt(findMatch(meta, META_REGEX.batteryRemainingLife, true), 10),\n      discharges: parseInt(findMatch(meta, META_REGEX.batteryDischarges, true), 10),\n      cells: parseInt(findMatch(meta, META_REGEX.batteryCells, true), 10),\n      firmware: findMatch(meta, META_REGEX.batteryFirmware),\n      serialNumber: findMatch(meta, META_REGEX.batterySerialNumber),\n    },\n    flightController: {\n      serialNumber: findMatch(meta, META_REGEX.fcSerialNumber),\n      firmware: findMatch(meta, META_REGEX.fcFirmware),\n    },\n    gimbal: {\n      firmware: findMatch(meta, META_REGEX.gimbalFirmware),\n    },\n    remoteController: {\n      serialNumber: findMatch(meta, META_REGEX.rcSerialNumber),\n      firmware: findMatch(meta, META_REGEX.rcFirmware),\n    },\n    camera: {\n      serialNumber: findMatch(meta, META_REGEX.cameraSerialNumber),\n    },\n  };\n}\n"],"names":[],"mappings":"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"}
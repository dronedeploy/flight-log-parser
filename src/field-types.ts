import { FlightLogHeader } from './types';

export const INT_FIELDS = new Set([
  FlightLogHeader.AircraftBatteryCell1Voltage,
  FlightLogHeader.AircraftBatteryCell2Voltage,
  FlightLogHeader.AircraftBatteryCell3Voltage,
  FlightLogHeader.AircraftBatteryCell4Voltage,
  FlightLogHeader.AircraftBatteryCharge,
  FlightLogHeader.AircraftBatteryCurrent,
  FlightLogHeader.AircraftBatteryTemperature,
  FlightLogHeader.AircraftBatteryVoltage,
  FlightLogHeader.AircraftCameraLensFocusModeValue,
  FlightLogHeader.AircraftCameraLensFocusStatusValue,
  FlightLogHeader.AircraftCameraModeValue,
  FlightLogHeader.AircraftFlightModeValue,
  FlightLogHeader.AircraftGPSSignalValue,
  FlightLogHeader.AircraftNoFlyValue,
  FlightLogHeader.AircraftSatellites,
  FlightLogHeader.GimbalModeValue,
  FlightLogHeader.AircraftSmartGoHomeRadius,
  FlightLogHeader.AircraftSmartGoHomeCountdown,
  FlightLogHeader.AircraftVelocityX,
  FlightLogHeader.AircraftVelocityY,
  FlightLogHeader.AircraftVelocityZ,
  FlightLogHeader.RCHorizontalAccuaracy,
  FlightLogHeader.RCLatitude,
  FlightLogHeader.RCLongitude,
  FlightLogHeader.LandingGearStatusValue,
  FlightLogHeader.LandingGearModeValue,
  FlightLogHeader.RCStateValue,
  FlightLogHeader.RCLandingGearValue,
]);

export const FLOAT_FIELDS = new Set([
  FlightLogHeader.AircraftBarometricAltitude,
  FlightLogHeader.AircraftBatteryPowerPercent,
  FlightLogHeader.AircraftCameraSDCardRemainingPercent,
  FlightLogHeader.AircraftHeading,
  FlightLogHeader.AircraftLatitude,
  FlightLogHeader.AircraftLongitude,
  FlightLogHeader.AircraftNoFlyLatitude,
  FlightLogHeader.AircraftNoFlyLongitude,
  FlightLogHeader.AircraftNoFlyRadius,
  FlightLogHeader.AircraftPitch,
  FlightLogHeader.AircraftRoll,
  FlightLogHeader.AircraftSmartGoHomeFlightReturnTime,
  FlightLogHeader.AircraftSmartGoHomeFlightTimeRemaining,
  FlightLogHeader.AircraftSmartGoHomeLandingPower,
  FlightLogHeader.AircraftSmartGoHomeLandingTime,
  FlightLogHeader.AircraftSmartGoHomeReturnPower,
  FlightLogHeader.AircraftSpeed,
  FlightLogHeader.AircraftUltrasonicAltitude,
  FlightLogHeader.DeviceToAircraftDistance,
  FlightLogHeader.ElapsedTime,
  FlightLogHeader.GimbalPitch,
  FlightLogHeader.GimbalPitchAtStop,
  FlightLogHeader.GimbalRoll,
  FlightLogHeader.GimbalRollAtStop,
  FlightLogHeader.GimbalYaw,
  FlightLogHeader.GimbalYawAtStop,
  FlightLogHeader.HomeLatitude,
  FlightLogHeader.HomeLongitude,
  FlightLogHeader.RCBatteryPercentRemaining,
  FlightLogHeader.RCLeftHorizontal,
  FlightLogHeader.RCRightHorizontal,
  FlightLogHeader.RCLeftVertical,
  FlightLogHeader.RCRightVertical,
]);

export const BOOL_FIELDS = new Set([
  FlightLogHeader.AircraftCameraBurstCapture,
  FlightLogHeader.AircraftCameraIntervalCapture,
  FlightLogHeader.AircraftCameraLensAFAssistant,
  FlightLogHeader.AircraftCameraLensAFEnabled,
  FlightLogHeader.AircraftCameraLensAssistantWorking,
  FlightLogHeader.AircraftCameraOverheated,
  FlightLogHeader.AircraftCameraRawCapture,
  FlightLogHeader.AircraftCameraBurstCapture,
  FlightLogHeader.AircraftCameraRecording,
  FlightLogHeader.AircraftCameraSDCardExists,
  FlightLogHeader.AircraftCameraSensorError,
  FlightLogHeader.AircraftCameraSingleCapture,
  FlightLogHeader.AircraftCameraStoringPhoto,
  FlightLogHeader.AircraftFlying,
  FlightLogHeader.AircraftIMUPreheating,
  FlightLogHeader.AircraftMotorsOn,
  FlightLogHeader.AircraftSmartGoHomeRequesting,
  FlightLogHeader.AircraftUltrasonicOn,
  FlightLogHeader.AircraftVisionOn,
  FlightLogHeader.LandingGearIsMovable,
  FlightLogHeader.RCGoHome,
  FlightLogHeader.RCRecord,
  FlightLogHeader.RCShutter,
  FlightLogHeader.RCPlayback,
  FlightLogHeader.RCPause,
  FlightLogHeader.RCCustom1,
  FlightLogHeader.RCCustom2,
  FlightLogHeader.RCSattelites,
  FlightLogHeader.RCGSPDataIsValid,
  FlightLogHeader.RCLeftHorizontal,
  FlightLogHeader.RCRightHorizontal,
  FlightLogHeader.RCLeftVertical,
  FlightLogHeader.RCRightVertical,
  FlightLogHeader.AircraftCameraChangeableLensSupported,
  FlightLogHeader.AircraftCameraLensInstalled,
  FlightLogHeader.AircraftCameraLensMFAssistant,
]);
